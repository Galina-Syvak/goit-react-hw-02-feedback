{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","css","feedbackList","map","feedback","feedbackItem","feedbackButton","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","onButtonClick","name","target","dataset","setState","prevState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4RAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,oCACI,6BAAKD,IACJC,K,oBCHE,SAASC,EAAT,GAAyD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAChD,OACI,oBAAIC,UAAWC,IAAIC,aAAnB,SACKJ,EAAQK,KAAI,SAAAC,GAAQ,OACjB,oBAAIJ,UAAWC,IAAII,aAAnB,SACI,wBAAQL,UAAWC,IAAIK,eAAgBC,KAAK,SAAS,YAAWH,EAAUI,QAAST,EAAnF,SAAqGK,KADnEA,QCLvC,SAASK,EAAT,GAAkC,IAAVC,EAAS,EAATA,QACnC,OACI,4BAAIA,ICDG,SAASC,EAAT,GAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC9D,OAAQD,EACN,8BACE,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,sDAAyBC,EAAzB,YAEK,cAACP,EAAD,CAAcC,QAAQ,sB,ICkCpBO,E,4MAxCbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,YAAiB,IACvBC,EADsB,EAAbC,OACOC,QAAhBF,KACR,EAAKG,UAAS,SAAAC,GAAS,sBAAQJ,EAAOI,EAAUJ,GAAQ,O,EAG1DK,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKT,MAAMN,KAAc,EAAKgB,uB,EAGnDA,mBAAqB,WACnB,OAAO,EAAKV,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,4CAG3D,WACE,MAA+Be,KAAKX,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKd,UAAU,MAAf,UACE,cAACN,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CAAiBC,QAASgC,OAAOC,KAAKF,KAAKX,OAAQnB,gBAAiB8B,KAAKV,kBAE3E,cAACzB,EAAD,CAASC,MAAM,aAAf,SACE,cAACgB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKD,qBACZZ,mBAAoBa,KAAKJ,6C,GAjCnBO,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,aAAe,sCAAsC,aAAe,sCAAsC,eAAiB,2C","file":"static/js/main.c39752da.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};","import css from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions ({ options, onLeaveFeedback }) {\r\n    return (\r\n        <ul className={css.feedbackList}>\r\n            {options.map(feedback =>\r\n                <li className={css.feedbackItem} key={feedback}>\r\n                    <button className={css.feedbackButton} type=\"button\" data-name={feedback} onClick={onLeaveFeedback}>{feedback}</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification ({message}){\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default function Statistics ({good, neutral, bad, total, positivePercentage}) {\r\n  return (total ?\r\n    <div>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: ${positivePercentage}%</li>\r\n      </ul>\r\n    </div> : <Notification message=\"No feedback given\"/>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};","import { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onButtonClick = ({ target }) => {\n    const { name } = target.dataset;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onButtonClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__2D9Pu\",\"feedbackItem\":\"FeedbackOptions_feedbackItem__7yydK\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__1aGlj\"};"],"sourceRoot":""}